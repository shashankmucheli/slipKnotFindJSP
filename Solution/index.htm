<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<script type="text/javascript" src="JSmol.min.js"></script>
<script src="js/Jmol2.js"></script>
<script>

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1);
        if (c.indexOf(name) == 0) return c.substring(name.length,c.length);
    }
    return "";
} 

var pdbfullname = getCookie("PDBName");
var pdbdir = getCookie("PDBDir");
var knotProtArray = getCookie("knotProt");
var pdbID = pdbfullname.split('.');
var knotProt = knotProtArray.split('-');
console.log(pdbdir+pdbID[0]);
console.log(knotProt);
</script>
<script>


var jmolApplet0; // set up in HTML table, below

// logic is set by indicating order of USE -- default is HTML5 for this test page, though
var use = "HTML5" // JAVA HTML5 WEBGL IMAGE  are all otions

// Developers: The _debugCode flag is checked in j2s/core/core.z.js, 
// and, if TRUE, skips loading the core methods, forcing those
// to be read from their individual directories. Set this
// true if you want to do some code debugging by inserting
// System.out.println, document.title, or alert commands
// anywhere in the Java or Jmol code.
jmol_isReady = function(applet) {
	Jmol._getElement(applet, "appletdiv").style.border="1px solid black"
}		

var xxxx = document.location.search
if (xxxx.indexOf("_USE=") > 0)xxxx = xxxx.substring(0, xxxx.indexOf("_USE=") - 1);
if (xxxx.length == 5 || xxxx.length == 0) { 
	xxxx = (xxxx + "?"+pdbdir+pdbID[0]).substring(1,50)
	//xxxx = xxxx + "?knotfind_1JS1;slipknotfind_1ALK_A;knotfind_1G0Z;knotfind_1E2I;knotfind_"+pdbID[0]";
	script = 'h2oOn=true;set animframecallback "jmolscript:if (!selectionHalos) {select model=_modelNumber}";'
	+'set errorCallback "myCallback";'
	+'set defaultloadscript "isDssp = false;set defaultVDW babel;if(!h2oOn){display !water}";'
	+'set zoomlarge false;set echo top left;echo loading XXXX...;refresh;'
	+'load "XXXX.pdb";set echo top left;echo XXXX;'
	+'spacefill off;wireframe off;cartoons on;'
	+'color gray; cartoon ONLY;wireframe 0.15,ball&stick; restrict *.ca;'

	script = script.replace(/XXXX/g, xxxx)
	//console.log(window.location);
} else {
	script = unescape(xxxx.substring(1))
}


Models = []

template = "xid='%1';load =%1|%2 (%1)"
function addModel(xxxx, text) {
 Models.push(template.replace(/\%1/g, xxxx).replace(/%2/g, text).split("|"))
}
function printData() {
	if(pdbdir == "Slipknots/"){
		document.getElementById("demo").innerHTML = "Knot tail = "+knotProt[0]+" to "+knotProt[1]+"<br />Knot Core = "+knotProt[1]+" to "+knotProt[2]+"<br />Slipknot Loop = "+knotProt[2]+" to "+knotProt[3]+"<br />Slipknot tail = "+knotProt[3]+" to "+knotProt[4];
	}
    else if(pdbdir == "Knots/"){
		document.getElementById("demo").innerHTML = "Knot tail = "+knotProt[0]+" to "+knotProt[1]+"<br />Knot core = "+knotProt[1]+" to "+knotProt[2]+"<br />Knot tail = "+knotProt[2]+" to "+knotProt[3];
	}
	else if(pdbdir == "PDB/"){
		document.getElementById("demo").innerHTML = "This Protein model is not knotted";
	}
}

// these are conveniences that mimic behavior of Jmol.js
function jmolCheckbox(script1, script0,text,ischecked) {Jmol.jmolCheckbox(jmolApplet0,script1, script0, text, ischecked)}
function jmolButton(script, text) {Jmol.jmolButton(jmolApplet0, script,text)}
function jmolHtml(s) { document.write(s) };
function jmolBr() { jmolHtml("<br />") }
function jmolMenu(a) {Jmol.jmolMenu(jmolApplet0, a)}
</script>
</head>
<body>

<center>


<table><tr>
<td>

<td align=center>

<script>

//jmolApplet0 = Jmol.getApplet("jmolApplet0", Info)
jmolApplet(700, script);
//function getAsArray() {
setTimeout(function(){
	var atomdata = jmolGetPropertyAsArray("atomInfo","all");
	var CA = new Array();
	var atom1 = atomdata[0];
	//var x = atom1.x;
	var asd = atom1;
	console.log(asd);
	var arrayLength = atomdata.length;
	for (var i = 0; i < arrayLength; i++) {
		if (atomdata[i].name == "CA"){
			CA.push(atomdata[i]);
		}
	}
	console.log(CA);
	var CALength = CA.length;
	if(pdbdir == "Knots/"){
		jmolScript("color group;")
		for (var i = 0; i < CALength-1; i++) {
			//alert(myStringArray[i]);
			if(CA[i].name == "CA"){
				if(CA[i].element == "carbon"){	
					jmolScript("connect (atomno="+CA[i].atomno+") (atomno="+CA[(i+1)].atomno+") SINGLE;")
					console.log(CA[i]);
				}
			}
		}
	}
	if(pdbdir == "Slipknots/"){
		for (var i = 0; i < CALength-1; i++) {
			//alert(myStringArray[i]);
			if(CA[i].name == "CA"){
				if(CA[i].resno >= knotProt[1] && CA[i].resno <= knotProt[3]){
					if(CA[i].element == "carbon"){	
						jmolScript("connect (atomno="+CA[i].atomno+") (atomno="+CA[(i+1)].atomno+") SINGLE;")
						console.log(CA[i]);
					}
				}
			}
		}
		jmolScript("select "+knotProt[1]+"-"+knotProt[3]+"; color group;")
	}
	if(pdbdir == "PDB/"){
		jmolScript("color group;")
	}
	//jmolScript("color group");
}, 400);
function redirectTo() {
	var win = window.open(window.location.href+pdbdir+pdbID[0]+".pdb", '_blank');
	if(win){
		win.focus();
	}else{
		alert('Please allow popups for this site');
	}
}	
//}

</script>
</td><td>
</td></tr>
<tr>
<td></td>
<td align=center>
<script>
jmolBr()
Jmol.setButtonCss(null,"style='width:180px'")
jmolButton("color cpk")
jmolButton("color group")
jmolButton("color amino")
//jmolButton("color white; trace ONLY;wireframe 0.15,ball&stick; restrict *.ca")
jmolBr()
jmolButton("background white")
jmolButton("background black")
</script>
<button onclick="redirectTo()">Download PDB!</button>
</td></tr></table>
<script>
</script>
<div id="demo" style="float: center;text-align: center;" >]
	<script>
		printData();
	</script>	
</div>
</body>
</html>